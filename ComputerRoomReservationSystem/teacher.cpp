#include "teacher.h"

// 默认构造
Teacher::Teacher()
{

}

// 有参构造(职工编号，姓名，密码)
Teacher::Teacher(int empId, string name, string pwd)
{
	// 初始化属性
	this->empId = empId;
	this->name = name;
	this->pwd = pwd;
}

// 菜单界面
void Teacher::operMenu()
{
	cout << "欢迎教师：" << this->name << "登录！" << endl;
	cout << "\t\t ----------------------------------\n";
	cout << "\t\t|                                  |\n";
	cout << "\t\t|          1.查看所有预约          |\n";
	cout << "\t\t|                                  |\n";
	cout << "\t\t|          2.审核预约              |\n";
	cout << "\t\t|                                  |\n";
	cout << "\t\t|          3.注销账号              |\n";
	cout << "\t\t|                                  |\n";
	cout << "\t\t|          0.退出登录              |\n";
	cout << "\t\t|                                  |\n";
	cout << "\t\t ----------------------------------\n";
	cout << "请选择您的操作： " << endl;
}

// 查看所有预约
void Teacher::showAllOrder()
{
	OrderFile of;
	if (of.size == 0)
	{
		cout << "无预约记录" << endl;
		system("pause");
		system("cls");
		return;
	}
	for (int i = 0; i < of.size; i++)
	{
		cout << i + 1 << "、 ";

		cout << "预约日期： 周" << of.m_orderData[i]["date"];
		cout << " 时段：" << (of.m_orderData[i]["interval"] == "1" ? "上午" : "下午");
		cout << " 学号：" << of.m_orderData[i]["stuId"];
		cout << " 姓名：" << of.m_orderData[i]["stuName"];
		cout << " 机房：" << of.m_orderData[i]["roomId"];
		string status = " 状态： ";  // 0 取消的预约   1 审核中   2 已预约 -1 预约失败
		if (of.m_orderData[i]["status"] == "1")
		{
			status += "审核中";
		}
		else if (of.m_orderData[i]["status"] == "2")
		{
			status += "预约成功";
		}
		else if (of.m_orderData[i]["status"] == "-1")
		{
			status += "审核未通过，预约失败";
		}
		else
		{
			status += "预约已取消";
		}
		cout << status << endl;
	}

	system("pause");
	system("cls");
}

// 审核预约
void Teacher::validOrder()
{
	OrderFile of;
	if (of.size == 0)
	{
		cout << "无预约记录" << endl;
		system("pause");
		system("cls");
		return;
	}
	cout << "待审核的预约记录如下：" << endl;

	vector<int> v;
	int index = 0;
	for (int i = 0; i < of.size; i++)
	{
		if (of.m_orderData[i]["status"] == "1")
		{
			v.push_back(i);
			cout << ++index << "、 ";
			cout << "预约日期： 周" << of.m_orderData[i]["date"];
			cout << " 时段：" << (of.m_orderData[i]["interval"] == "1" ? "上午" : "下午");
			cout << " 机房：" << of.m_orderData[i]["roomId"];
			string status = " 状态： ";  // 0 取消的预约   1 审核中   2 已预约  -1 预约失败
			if (of.m_orderData[i]["status"] == "1")
			{
				status += "审核中";
			}
			cout << status << endl;
		}
	}
	cout << "请输入审核的预约记录, 0代表返回" << endl;
	int select = 0;
	int ret = 0;
	while (true)
	{
		cin >> select;
		if (select >= 0 && select <= v.size())
		{
			if (select == 0)
			{
				break;
			}
			else
			{
				cout << "请输入审核结果" << endl;
				cout << "1、通过" << endl;
				cout << "2、不通过" << endl;
				cin >> ret;

				if (ret == 1)
				{
					of.m_orderData[v[select - 1]]["status"] = "2";
				}
				else
				{
					of.m_orderData[v[select - 1]]["status"] = "-1";
				}
				of.updateOrder();
				cout << "审核完毕！" << endl;
				break;
			}
		}
		cout << "输入有误，请重新输入" << endl;
	}

	system("pause");
	system("cls");
}

// 注销账号
void Teacher::deletePerson()
{
	cout << "确定是否注销本账号？" << endl;
	cout << "1. 确定" << endl;
	cout << "2. 取消" << endl;

	int select;
	cin >> select;
	if (select == 1)
	{
		ofstream ofs;
		ofs.open(TEACHER_FILE, ios::out);
		for (vector<Teacher>::iterator iter = vTea.begin(); iter != vTea.end(); iter++)
		{
			if (iter->empId == this->empId)
			{
				continue;
			}
			else
			{
				ofs << iter->empId << " " << iter->name << " " << pwd << endl;
			}
		}

		ofs.close();
		this->isExist = true;
		cout << "注销成功！" << endl;

		system("pause");
		system("cls");

		// 初始化容器
		this->initVector();
	}
	else
	{
		system("pause");
		system("cls");
	}
}

// 初始化容器
void Teacher::initVector()
{
	// 读取教师文件中信息
	ifstream ifs;
	ifs.open(TEACHER_FILE, ios::in);
	if (!ifs.is_open())
	{
		cout << "文件读取失败" << endl;
		return;
	}

	vTea.clear();

	Teacher s;
	while (ifs >> s.empId && ifs >> s.name && ifs >> s.pwd)
	{
		vTea.push_back(s);
	}

	ifs.close();
}